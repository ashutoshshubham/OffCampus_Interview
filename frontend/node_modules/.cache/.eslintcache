[{"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\index.js":"1","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\reportWebVitals.js":"2","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\App.js":"3","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\index.js":"4","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\NavBar.js":"5","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\context\\UserProvider.js":"6","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\Home.jsx":"7","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\Login.js":"8","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\SignUp.js":"9","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\index.js":"10","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\NavBar.js":"11","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\Add_jobs.jsx":"12","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\User_profile.jsx":"13","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\ManageJobs.jsx":"14","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\auth\\UserAuth.js":"15"},{"size":535,"mtime":1682151311166,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1682151311460,"results":"18","hashOfConfig":"17"},{"size":1413,"mtime":1682572916973,"results":"19","hashOfConfig":"17"},{"size":227,"mtime":1682230598844,"results":"20","hashOfConfig":"17"},{"size":4203,"mtime":1682573697488,"results":"21","hashOfConfig":"17"},{"size":656,"mtime":1682143638465,"results":"22","hashOfConfig":"17"},{"size":113,"mtime":1682152855648,"results":"23","hashOfConfig":"17"},{"size":3693,"mtime":1682574860368,"results":"24","hashOfConfig":"17"},{"size":3010,"mtime":1682148275568,"results":"25","hashOfConfig":"17"},{"size":249,"mtime":1682230598853,"results":"26","hashOfConfig":"17"},{"size":4288,"mtime":1682574620231,"results":"27","hashOfConfig":"17"},{"size":6226,"mtime":1682177921975,"results":"28","hashOfConfig":"17"},{"size":8271,"mtime":1682177194853,"results":"29","hashOfConfig":"17"},{"size":4102,"mtime":1682179014416,"results":"30","hashOfConfig":"17"},{"size":593,"mtime":1682144556625,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"e2afny",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"35"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"35"},"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\index.js",[],[],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\App.js",["82","83"],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\index.js",[],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\NavBar.js",["84","85"],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\context\\UserProvider.js",[],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\Home.jsx",[],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\Login.js",["86","87"],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\main\\SignUp.js",[],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\index.js",[],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\NavBar.js",["88","89","90"],[],"D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\Add_jobs.jsx",["91","92"],[],"import { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport { MDBInput, MDBTextArea } from 'mdb-react-ui-kit';\r\nimport './style.css'\r\n\r\n\r\nconst Add_jobs = () => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('user')))\r\n    console.log(currentUser);\r\n\r\n    const jobData = async (formdata, { resetForm }) => {\r\n        const res = await fetch('http://localhost:5000/add_jobs/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(formdata),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n\r\n        console.log(res.status);\r\n\r\n        if (res.status === 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Signed Successfully'\r\n            })\r\n            const data = await res.json();\r\n            console.log(data)\r\n            resetForm();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='add_jobs_bg_image'>\r\n            <div className=\"card w-50 mx-auto rounded-5\">\r\n                <div className=\"card-body\">\r\n                    <h1 className=\"card-title text-center\">ADD YOUR JOB HERE</h1>\r\n\r\n                    <Formik\r\n                        initialValues={\r\n                            {\r\n                                jobType: \"\",\r\n                                reg_Link: \"\",\r\n                                lastDate: \"\",\r\n                                course_branch: \"\",\r\n                                batch: \"\",\r\n                                salary: \"\",\r\n                                designation: \"\",\r\n                                roles_responsibility: \"\",\r\n                                selectionProcess: \"\",\r\n                                interviewLocation: \"\",\r\n                                skillsRequired: \"\",\r\n                                user: currentUser._id\r\n                            }\r\n                        }\r\n                        onSubmit={jobData}\r\n                    >\r\n                        {\r\n                            ({ values, handleChange, handleSubmit }) => (\r\n                                <form onSubmit={handleSubmit}>\r\n\r\n                                    <div className=\"row mt-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <MDBInput label='Job Type' id='jobType' type='text'\r\n                                                onChange={handleChange} value={values.jobType} />\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <MDBInput label='Last Date' id='lastDate' type='date'\r\n                                                onChange={handleChange} value={values.lastDate} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <MDBInput className='mt-3' label='Registration Link' id='reg_Link' type='url'\r\n                                        onChange={handleChange} value={values.reg_Link} />\r\n\r\n                                   \r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Courses and Branches' id='course_branch'\r\n                                            type='text' onChange={handleChange} value={values.course_branch} rows={4} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Salary' id='salary'\r\n                                            type='text' onChange={handleChange} value={values.salary} rows={4} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Batch' id='batch'\r\n                                            type='text' onChange={handleChange} value={values.batch} rows={4} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Designation' id='designation'\r\n                                            type='text' onChange={handleChange} value={values.designation} rows={4} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Roles and Responsibility' id='roles_responsibility'\r\n                                            type='text' onChange={handleChange} value={values.roles_responsibility} rows={4} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Selection Process' id='selectionProcess'\r\n                                            type='text' onChange={handleChange} value={values.selectionProcess} rows={4} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Interview Location' id='interviewLocation'\r\n                                            type='text' onChange={handleChange} value={values.interviewLocation} rows={4} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <MDBTextArea label='Skill Required' id='skillsRequired'\r\n                                            type='text' onChange={handleChange} value={values.skillsRequired} rows={4} />\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-success w-100 my-3\">Submit</button>\r\n                                </form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add_jobs","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\User_profile.jsx",["93"],[],"import { Formik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst User_profile = () => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('user')))\r\n    console.log(currentUser);\r\n\r\n    const profileData = async (formdata, { resetForm }) => {\r\n        const res = await fetch('http://localhost:5000/profile/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(formdata),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n\r\n        console.log(res.status);\r\n\r\n        if (res.status === 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Profile Submitted Successfully'\r\n            })\r\n            const data = await res.json();\r\n            console.log(data)\r\n            resetForm();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"vh-100 h-custom\" style={{ backgroundColor: \"#8fc4b7\" }}>\r\n                <div className=\"container py-5 h-100\">\r\n                    <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n                        <div className=\"col-lg-8 col-xl-6\">\r\n                            <div className=\"card rounded-3\">\r\n                                {/* <img\r\n                                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/img3.webp\"\r\n                                    className=\"w-100\"\r\n                                    style={{\r\n                                        borderTopLeftRadius: \".3rem\",\r\n                                        borderTopRightRadius: \".3rem\"\r\n                                    }}\r\n                                    alt=\"Sample photo\"\r\n                                /> */}\r\n                                <div className=\"card-body p-4 p-md-5\">\r\n                                    <h3 className=\"mb-4 pb-2 pb-md-0 mb-md-5 px-md-2 text-center\">\r\n                                        COMPANY DETAILS HERE\r\n                                    </h3>\r\n\r\n                                    <Formik\r\n                                        initialValues={\r\n                                            {\r\n                                                comp_name: \"\",\r\n                                                comp_contact: \"\",\r\n                                                comp_email: \"\",\r\n                                                about_comp: \"\",\r\n                                                user: currentUser._id\r\n                                            }\r\n                                        }\r\n                                        onSubmit={profileData}\r\n                                    >\r\n\r\n                                        {\r\n                                            ({ values, handleChange, handleSubmit }) => (\r\n                                                <form onSubmit={handleSubmit}>\r\n                                                    <div className=\" mb-4\">\r\n                                                        <label className=\"form-label\" htmlFor=\"form3Example1q\">\r\n                                                            Company Name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"comp_name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={values.comp_name}\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6 mb-4\">\r\n                                                            <div className=\" datepicker\">\r\n                                                                <label htmlFor=\"exampleDatepicker1\" className=\"form-label\">\r\n                                                                    Contact\r\n                                                                </label>\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    className=\"form-control\"\r\n                                                                    id=\"comp_contact\"\r\n                                                                    value={values.comp_contact}\r\n                                                                    onChange={handleChange}\r\n                                                                />\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {/* <div className=\"row mb-4 pb-2 pb-md-0 mb-md-5\"> */}\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <div className=\"\">\r\n                                                                <label className=\"form-label\" htmlFor=\"form3Example1w\">\r\n                                                                    Email\r\n                                                                </label>\r\n                                                                <input\r\n                                                                    type=\"email\"\r\n                                                                    id=\"comp_email\"\r\n                                                                    className=\"form-control\"\r\n                                                                    value={values.comp_email}\r\n                                                                    onChange={handleChange}\r\n                                                                />\r\n\r\n                                                                {/* </div> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"\">\r\n                                                        <label className=\"form-label\" htmlFor=\"textAreaExample\">\r\n                                                            About Company\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            className=\"form-control\"\r\n                                                            id=\"about_comp\"\r\n                                                            rows={4}\r\n                                                            value={values.about_comp}\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n\r\n                                                    <button type=\"submit\" className=\"btn btn-success w-100 my-4\">\r\n                                                        Submit\r\n                                                    </button>\r\n                                                </form>\r\n                                            )\r\n                                        }\r\n\r\n                                    </Formik>\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User_profile","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\components\\user\\ManageJobs.jsx",["94","95"],[],"import React, { useEffect, useState } from 'react'\r\nimport { MDBAccordion, MDBAccordionItem } from 'mdb-react-ui-kit';\r\n\r\nconst ManageJobs = () => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('user')))\r\n    console.log(currentUser);\r\n\r\n    const [jobData, setJobData] = useState([])\r\n    const [compData, setCompData] = useState([])\r\n    // const [loading, setLoading] = useState(false)\r\n\r\n    const fetchCompData = async () => {\r\n        // setLoading(true);\r\n        const res = await fetch('http://localhost:5000/profile/getbyuser/' + currentUser._id)\r\n        // setLoading(false);\r\n        console.log(res.status)\r\n        // console.log(currentUser._id)\r\n\r\n        if (res.status === 200) {\r\n            const data = await res.json();\r\n            console.log(data)\r\n            setCompData(data)\r\n        }\r\n    }\r\n\r\n    const fetchJobData = async () => {\r\n        // setLoading(true);\r\n        const res = await fetch('http://localhost:5000/add_jobs/getbyuser/' + currentUser._id)\r\n        // setLoading(false);\r\n        console.log(res.status)\r\n        console.log(currentUser._id)\r\n\r\n        if (res.status === 200) {\r\n            const data = await res.json();\r\n            console.log(data)\r\n            setJobData(data)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchCompData();\r\n        fetchJobData();\r\n    }, [])\r\n\r\n\r\n    const displayDetails = () => {\r\n        if (jobData && compData) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        compData.map((comp) => (\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    {/* <h5 className=\"card-title\">Card title</h5> */}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4 my-auto\">\r\n                                            <MDBAccordion>\r\n                                                <MDBAccordionItem collapseId={1}>\r\n                                                    <p>{comp.comp_name}</p>\r\n                                                </MDBAccordionItem>\r\n                                            </MDBAccordion>\r\n                                        </div>\r\n                                        <div className=\"col-md-8\">\r\n                                            <MDBAccordion>\r\n                                                <MDBAccordionItem collapseId={1} headerTitle='Accordion Item #1'>\r\n                                                    dfsfsdfsf\r\n                                                </MDBAccordionItem>\r\n                                            </MDBAccordion>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='container'>\r\n\r\n            {/* <div className=\"card container\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 my-auto\">\r\n                            <MDBAccordion>\r\n                                <MDBAccordionItem collapseId={1} headerTitle='Accordion Item #1'>\r\n\r\n                                </MDBAccordionItem>\r\n                            </MDBAccordion>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <MDBAccordion>\r\n                                <MDBAccordionItem collapseId={1} headerTitle='Accordion Item #1'>\r\n                                    dfsfsdfsf\r\n                                </MDBAccordionItem>\r\n                            </MDBAccordion>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {displayDetails()}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ManageJobs","D:\\Assignment\\OffCampus_Interview\\frontend\\src\\auth\\UserAuth.js",["96"],[],"import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nconst UserAuth = ({children}) => {\n  \n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('user')));\n\n    \n    if(currentUser!==null){\n        return children;\n    }\n    else{\n        Swal.fire({\n            icon: 'error',\n            title : 'Error',\n            text: 'Please Login First!!',\n        })\n        // store the current address in the session storage\n        return <Navigate to=\"/main/login\" />\n    }\n}\n\nexport default UserAuth",{"ruleId":"97","severity":1,"message":"98","line":28,"column":29,"nodeType":"99","messageId":"100","endLine":28,"endColumn":41},{"ruleId":"97","severity":1,"message":"101","line":29,"column":29,"nodeType":"99","messageId":"100","endLine":29,"endColumn":45},{"ruleId":"102","severity":1,"message":"103","line":8,"column":23,"nodeType":"104","messageId":"105","endLine":8,"endColumn":34},{"ruleId":"102","severity":1,"message":"106","line":8,"column":36,"nodeType":"104","messageId":"105","endLine":8,"endColumn":42},{"ruleId":"102","severity":1,"message":"107","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":11,"column":12,"nodeType":"104","messageId":"105","endLine":11,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":6,"column":23,"nodeType":"104","messageId":"105","endLine":6,"endColumn":34},{"ruleId":"102","severity":1,"message":"109","line":7,"column":12,"nodeType":"104","messageId":"105","endLine":7,"endColumn":23},{"ruleId":"102","severity":1,"message":"110","line":7,"column":25,"nodeType":"104","messageId":"105","endLine":7,"endColumn":39},{"ruleId":"102","severity":1,"message":"111","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":11,"column":25,"nodeType":"104","messageId":"105","endLine":11,"endColumn":39},{"ruleId":"102","severity":1,"message":"110","line":7,"column":25,"nodeType":"104","messageId":"105","endLine":7,"endColumn":39},{"ruleId":"102","severity":1,"message":"110","line":6,"column":25,"nodeType":"104","messageId":"105","endLine":6,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":46,"column":8,"nodeType":"114","endLine":46,"endColumn":10,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"110","line":7,"column":25,"nodeType":"104","messageId":"105","endLine":7,"endColumn":39},"react/jsx-pascal-case","Imported JSX component Add_jobs must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component User_profile must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'setLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'logout' is assigned a value but never used.","'useState' is defined but never used.","'loggedIn' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCompData' and 'fetchJobData'. Either include them or remove the dependency array.","ArrayExpression",["116"],{"desc":"117","fix":"118"},"Update the dependencies array to be: [fetchCompData, fetchJobData]",{"range":"119","text":"120"},[1384,1386],"[fetchCompData, fetchJobData]"]